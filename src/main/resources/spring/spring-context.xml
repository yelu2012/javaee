<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    <!--读取配置文件-->
    <context:property-placeholder location="classpath*:jdbc.properties,classpath*:redis.properties"/>
    <!-- 启动扫描机制  扫描包-->
    <context:annotation-config />
    <context:component-scan base-package="com.uws.yl">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置dataSource 数据源 用的阿里巴巴的druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <!--最大连接数据库连接数,设 0 为没有限制-->
        <property name="maxActive" value="200"/>
        <property name="maxWait" value="30000"/>
    </bean>
    <!--配置mybatis 的sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--扫描com.uws.yl.model包下的类为model-->
        <property name="typeAliasesPackage" value="com.uws.yl.model"/>
        <!--扫描mapper文件-->
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
        <!--注册mybatis的配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!--配置mybatis 的sqlSessionTemplate-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>

    <!--配置mybatis 的mapperScannerConfigurer 这样他会扫描com.uws.yl.mapper包下的@Repository 注解的接口为mapper-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.uws.yl.mapper"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>


    <!--事务管理器-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--启动注解方式配置事务-->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>

    <!--aop xml配置事务管理-->
    <tx:advice transaction-manager="dataSourceTransactionManager" id="txAdvice">
        <tx:attributes>
            <tx:method name="insert*" isolation="READ_COMMITTED" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config proxy-target-class="true">
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.uws.yl.service.*.*(..))"/>
    </aop:config>

    <!-- 任务及线程池 -->
    <task:annotation-driven executor="asyncExecutor" />
    <task:executor id="asyncExecutor" pool-size="100-10000" queue-capacity="10"/>


</beans>